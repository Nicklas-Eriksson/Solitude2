// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solitude2.Data;

namespace Solitude2.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210604133245_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Solitude2.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Solitude2.Models.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Bonus")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ILvl")
                        .HasColumnType("int");

                    b.Property<bool>("IsPotion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrash")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWeapon")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlayerID")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerID1")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("PlayerID");

                    b.HasIndex("PlayerID1");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Solitude2.Models.Monster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alive")
                        .HasColumnType("bit");

                    b.Property<string>("AttackName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CurrentHp")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Dmg")
                        .HasColumnType("real");

                    b.Property<int?>("DropID")
                        .HasColumnType("int");

                    b.Property<float>("ExpDrop")
                        .HasColumnType("real");

                    b.Property<float>("GoldDrop")
                        .HasColumnType("real");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<float>("MaxHp")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TalentDrop")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DropID");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("Solitude2.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alive")
                        .HasColumnType("bit");

                    b.Property<float>("AttackPower")
                        .HasColumnType("real");

                    b.Property<float>("CritBonus")
                        .HasColumnType("real");

                    b.Property<float>("CritPercent")
                        .HasColumnType("real");

                    b.Property<float>("CurrentExp")
                        .HasColumnType("real");

                    b.Property<float>("CurrentHP")
                        .HasColumnType("real");

                    b.Property<int>("CurrentLvl")
                        .HasColumnType("int");

                    b.Property<int?>("EquippedWeaponID")
                        .HasColumnType("int");

                    b.Property<float>("ExpReqForLvl")
                        .HasColumnType("real");

                    b.Property<float>("Gold")
                        .HasColumnType("real");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<float>("MaxHP")
                        .HasColumnType("real");

                    b.Property<int>("MaxLvl")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EquippedWeaponID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Solitude2.Models.Item", b =>
                {
                    b.HasOne("Solitude2.Models.Player", null)
                        .WithMany("Inventory")
                        .HasForeignKey("PlayerID");

                    b.HasOne("Solitude2.Models.Player", null)
                        .WithMany("Potions")
                        .HasForeignKey("PlayerID1");
                });

            modelBuilder.Entity("Solitude2.Models.Monster", b =>
                {
                    b.HasOne("Solitude2.Models.Item", "Drop")
                        .WithMany()
                        .HasForeignKey("DropID");

                    b.Navigation("Drop");
                });

            modelBuilder.Entity("Solitude2.Models.Player", b =>
                {
                    b.HasOne("Solitude2.Models.Item", "EquippedWeapon")
                        .WithMany()
                        .HasForeignKey("EquippedWeaponID");

                    b.Navigation("EquippedWeapon");
                });

            modelBuilder.Entity("Solitude2.Models.Player", b =>
                {
                    b.Navigation("Inventory");

                    b.Navigation("Potions");
                });
#pragma warning restore 612, 618
        }
    }
}
